PRELUDE	
	cohesion
		functional relatedness of the elements of a module
		forces that cause a module/class to change
	each responsibility is an axis of change
	example: rectange vs geometric rectange. GUI vs computational geometry

WHAT IS A RESPONSIBILITY?
	resp. (responsibiliity) = reason for change (used for future shorthand in my notes)
	example: modem:
		dial()/hangup() for connection.
		send()/recv() for data communication
		seperate into 2 INTERFACES (implements MODEM)
			Data Channel
				send() and recv()
			Connection
				dial() and hangup ()
	RIGIDITY
		changes affect the signature of other functions
	NEEDLESS COMPLEXITY
		Seperation of resp. without needing to
	**an axis of change is an axis of change if the changes actually occurr
			no need for SRP if there is no symptom

SEPERATING COUPLED RESPONSIBILITIES
	ModemImplementation class
		dependencies flow away from it to the interfaces
		only main() needs to know it exists
		metaphor about it being an ugly bit we put behind a fence.
			the application free from its ugliness
	decoupling through seperating interfaces sometimes necessary	

PERSISTENCE
	example: Employee class
		business rules that change frequently
		persistence that may not always change, but still might
		FACADE, DAO, or PROXY patterns to separate the 2 resp.

CONCLUSION
	SRP is pretty simple
	joining resp. is something we do naturally
	finding and separating those resp. is what software design is about
